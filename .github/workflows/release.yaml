name: Release
permissions:
  contents: write # in order to upload release assets
on:
  release:
    types:
      - published

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      versionFlags: ${{ steps.flags.outputs.versionFlags }}
      versionNumber: ${{ steps.flags.outputs.versionNumber }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set build version metadata flags
        id: flags
        run: |
          ldflags=(
            "-X github.com/pomerium/cli/version.Version=${{ github.event.release.tag_name }}"
            "-X github.com/pomerium/cli/version.GitCommit=$(git rev-parse --short HEAD)"
            "-X github.com/pomerium/cli/version.BuildMeta=$(date +%s)"
            "-X github.com/pomerium/cli/version.ProjectName=pomerium-cli"
            "-X github.com/pomerium/cli/version.ProjectURL=https://www.pomerium.io"
          )
          echo "versionFlags=${ldflags[*]}" >> $GITHUB_OUTPUT
          echo "versionNumber=$(echo ${{ github.event.release.tag_name }} | grep -o -P "\d+(?:\.\d+)*" || echo "1.0.0.0")" >> $GITHUB_OUTPUT

  build-macos:
    runs-on: macos-latest
    needs: metadata
    strategy:
      matrix:
        arch: [amd64, arm64]
    outputs:
      checksums: ${{ steps.build.outputs.checksums }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a
        with:
          go-version: 1.23.x

      - name: Build
        id: build
        run: |
          mkdir -p bin/${{ matrix.arch }}
          GOARCH=${{ matrix.arch }} CGO_ENABLED=1 go build -o bin/${{ matrix.arch }} \
            -ldflags="-s -w ${{ needs.metadata.outputs.versionFlags }}" \
            ./cmd/pomerium-cli

      - name: Archive
        id: archive
        run: |
          gtar czf pomerium-cli-darwin-${{ matrix.arch }}.tar.gz -C bin/${{ matrix.arch }} pomerium-cli
          echo 'checksums<<EOF' >> $GITHUB_OUTPUT
          shasum -a 256 pomerium-cli-darwin-${{ matrix.arch }}.tar.gz >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

      - name: Upload to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload "${{ github.event.release.tag_name }}" pomerium-cli-darwin-*.tar.gz

  build-windows:
    runs-on: windows-latest
    needs: metadata
    strategy:
      matrix:
        arch: [{go: amd64, wix: x64}, {go: arm64, wix: arm64}]
    outputs:
      checksums: ${{ steps.build.outputs.checksums }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a
        with:
          go-version: 1.23.x

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build
        id: build
        shell: bash
        run: |
          mkdir -p bin/${{ matrix.arch.go }}
          GOARCH=${{ matrix.arch.go }} CGO_ENABLED=1 go build -o bin/${{ matrix.arch.go }} \
            -ldflags="-s -w ${{ needs.metadata.outputs.versionFlags }}" \
            ./cmd/pomerium-cli

      - name: Archive
        id: archive
        shell: bash
        run: |
          zipfile="pomerium-cli-windows-${{ matrix.arch.go }}.zip"
          powershell "Compress-Archive -Path bin\\${{ matrix.arch.go }}\\\* -DestinationPath $zipfile"
          hash=$(powershell "(Get-FileHash $zipfile -Algorithm SHA256).Hash.ToLower()")
          echo 'checksums<<EOF' >> $GITHUB_OUTPUT
          echo "$hash $zipfile" >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

      - name: Build MSI
        id: msi
        shell: bash
        run: |
          dotnet tool install --global wix
          wix extension add -g WixToolset.UI.wixext
          msifile="pomerium-cli-windows-${{ matrix.arch.go }}.msi"
          wix build -arch ${{ matrix.arch.wix }} -ext WixToolset.UI.wixext -b bin\\${{ matrix.arch.go }} -d "version=${{ needs.metadata.outputs.versionNumber }}" -o "$msifile" msi/PomeriumCli.wxs msi/WixUI_InstallDir_NoLicense.wxs
          hash=$(powershell "(Get-FileHash $msifile -Algorithm SHA256).Hash.ToLower()")
          echo 'checksums<<EOF' >> $GITHUB_OUTPUT
          echo "$hash $zipfile" >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

      - name: Upload to release
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload "${{ github.event.release.tag_name }}" pomerium-cli-windows-*.zip pomerium-cli-windows-*.msi

  goreleaser:
    permissions:
      contents: write
      issues: read
      pull-requests: read
    runs-on: ubuntu-latest
    needs: metadata
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    outputs:
      tag: ${{ steps.tagName.outputs.tag }}
      checksums: ${{ steps.checksums.outputs.checksums }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0 # GoReleaser needs commit history for changelog

      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a
        with:
          go-version: 1.23.x

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5

      - uses: azure/docker-login@15c4aadf093404726ab2ff205b2cdd33fa6d054c
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6.1.0
        with:
          version: v1.18.2
          args: release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          APPARITOR_GITHUB_TOKEN: ${{ secrets.APPARITOR_GITHUB_TOKEN }}
          VERSION_FLAGS: ${{ needs.metadata.outputs.versionFlags }}

      - name: Compute checksums
        id: checksums
        working-directory: ./dist
        run: |
          echo 'checksums<<EOF' >> $GITHUB_OUTPUT
          shasum -a 256 *.{tar.gz,deb,rpm} >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

      - name: Get tag name
        id: tagName
        run: |
          TAG=$(git describe --tags --exact-match)
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Install Cloudsmith CLI
        run: |
          pip3 install cloudsmith-cli

      - name: Publish to Cloudsmith
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        working-directory: dist/
        run: |
          VERSION=${{ steps.tagName.outputs.version }}
          RPMS="pomerium-cli-${VERSION}-1.aarch64.rpm pomerium-cli-${VERSION}-1.x86_64.rpm pomerium-cli-${VERSION}-1.armhf.rpm"
          for pkg in $(echo $RPMS); do
            cloudsmith push rpm pomerium/pomerium/el/any-version $pkg
          done

          DEBS="pomerium-cli_${VERSION}-1_amd64.deb pomerium-cli_${VERSION}-1_arm64.deb pomerium-cli_${VERSION}-1_armhf.deb"
          for pkg in $(echo $DEBS); do
            cloudsmith push deb pomerium/pomerium/debian/any-version $pkg
          done

      - name: Find latest tag
        id: latestTag
        run: |
          LATEST_TAG=$(git tag | grep -vi 'rc' | sort --version-sort | tail -1)
          echo "tag=${LATEST_TAG}" >> $GITHUB_OUTPUT

      - name: Publish latest tag
        if: "steps.latestTag.outputs.tag == steps.tagName.outputs.tag"
        run: |
          docker manifest create -a pomerium/cli:latest pomerium/cli:amd64-${{ steps.tagName.outputs.tag }} pomerium/cli:arm64v8-${{ steps.tagName.outputs.tag }}
          docker manifest push pomerium/cli:latest

  upload-checksums:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows, goreleaser]
    steps:
      - name: Upload checksums
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "${{ needs.build-macos.outputs.checksums }}" >> pomerium-cli_checksums.txt
          echo "${{ needs.build-windows.outputs.checksums }}" >> pomerium-cli_checksums.txt
          echo "${{ needs.goreleaser.outputs.checksums }}" >> pomerium-cli_checksums.txt
          gh release upload "${{ github.event.release.tag_name }}" pomerium-cli_checksums.txt
