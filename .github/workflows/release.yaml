name: Release
permissions:
  contents: write # in order to upload release assets
on:
  release:
    types:
      - published

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      versionFlags: ${{ steps.flags.outputs.versionFlags }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Set build version metadata flags
        id: flags
        run: |
          ldflags=(
            "-X github.com/pomerium/cli/version.Version=${{ github.event.release.tag_name }}"
            "-X github.com/pomerium/cli/version.GitCommit=$(git rev-parse --short HEAD)"
            "-X github.com/pomerium/cli/version.BuildMeta=$(date +%s)"
            "-X github.com/pomerium/cli/version.ProjectName=pomerium-cli"
            "-X github.com/pomerium/cli/version.ProjectURL=https://www.pomerium.io"
          )
          echo "versionFlags=${ldflags[*]}" >> $GITHUB_OUTPUT

  build-macos:
    runs-on: macos-latest
    needs: metadata
    outputs:
      checksums: ${{ steps.build.outputs.checksums }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version: 1.21.x

      - name: Build and archive
        id: build
        run: |
          echo 'checksums<<EOF' >> $GITHUB_OUTPUT
          for arch in amd64 arm64; do
            mkdir -p bin/$arch
            GOARCH=$arch CGO_ENABLED=1 go build -o bin/$arch \
              -ldflags="-s -w ${{ needs.metadata.outputs.versionFlags }}" \
              ./cmd/pomerium-cli
            gtar czf pomerium-cli-darwin-$arch.tar.gz -C bin/$arch pomerium-cli
            shasum -a 256 pomerium-cli-darwin-$arch.tar.gz >> $GITHUB_OUTPUT
          done
          echo EOF >> $GITHUB_OUTPUT

      - name: Upload to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload "${{ github.event.release.tag_name }}" pomerium-cli-darwin-*.tar.gz

  build-windows:
    runs-on: windows-latest
    needs: metadata
    outputs:
      checksums: ${{ steps.build.outputs.checksums }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version: 1.21.x

      - name: Build and archive
        id: build
        shell: bash
        run: |
          echo 'checksums<<EOF' >> $GITHUB_OUTPUT
          for arch in amd64 arm64; do
            mkdir -p bin/$arch
            GOARCH=$arch CGO_ENABLED=1 go build -o bin/$arch \
              -ldflags="-s -w ${{ needs.metadata.outputs.versionFlags }}" \
              ./cmd/pomerium-cli
            zipfile="pomerium-cli-windows-$arch.zip"
            powershell "Compress-Archive -Path bin\\$arch\\\* -DestinationPath $zipfile"
            hash=$(powershell "(Get-FileHash $zipfile -Algorithm SHA256).Hash.ToLower()")
            echo "$hash  $zipfile" >> $GITHUB_OUTPUT
          done
          echo EOF >> $GITHUB_OUTPUT

      - name: Upload to release
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload "${{ github.event.release.tag_name }}" pomerium-cli-windows-*.zip

  goreleaser:
    permissions:
      contents: write
      issues: read
      pull-requests: read
    runs-on: ubuntu-latest
    needs: metadata
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    outputs:
      tag: ${{ steps.tagName.outputs.tag }}
      checksums: ${{ steps.checksums.outputs.checksums }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0 # GoReleaser needs commit history for changelog

      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version: 1.21.x

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - uses: azure/docker-login@81744f9799e7eaa418697cb168452a2882ae844a
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5.0.0
        with:
          version: v1.18.2
          args: release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          APPARITOR_GITHUB_TOKEN: ${{ secrets.APPARITOR_GITHUB_TOKEN }}
          VERSION_FLAGS: ${{ needs.metadata.outputs.versionFlags }}

      - name: Compute checksums
        id: checksums
        working-directory: ./dist
        run: |
          echo 'checksums<<EOF' >> $GITHUB_OUTPUT
          shasum -a 256 *.{tar.gz,deb,rpm} >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

      - name: Get tag name
        id: tagName
        run: |
          TAG=$(git describe --tags --exact-match)
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Install Cloudsmith CLI
        run: |
          pip3 install cloudsmith-cli

      - name: Publish to Cloudsmith
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        working-directory: dist/
        run: |
          VERSION=${{ steps.tagName.outputs.version }}
          RPMS="pomerium-cli-${VERSION}-1.aarch64.rpm pomerium-cli-${VERSION}-1.x86_64.rpm pomerium-cli-${VERSION}-1.armhf.rpm"
          for pkg in $(echo $RPMS); do
            cloudsmith push rpm pomerium/pomerium/el/any-version $pkg
          done

          DEBS="pomerium-cli_${VERSION}-1_amd64.deb pomerium-cli_${VERSION}-1_arm64.deb pomerium-cli_${VERSION}-1_armhf.deb"
          for pkg in $(echo $DEBS); do
            cloudsmith push deb pomerium/pomerium/debian/any-version $pkg
          done

      - name: Find latest tag
        id: latestTag
        run: |
          LATEST_TAG=$(git tag | grep -vi 'rc' | sort --version-sort | tail -1)
          echo "tag=${LATEST_TAG}" >> $GITHUB_OUTPUT

      - name: Publish latest tag
        if: "steps.latestTag.outputs.tag == steps.tagName.outputs.tag"
        run: |
          docker manifest create -a pomerium/cli:latest pomerium/cli:amd64-${{ steps.tagName.outputs.tag }} pomerium/cli:arm64v8-${{ steps.tagName.outputs.tag }}
          docker manifest push pomerium/cli:latest

  upload-checksums:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows, goreleaser]
    steps:
      - name: Upload checksums
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "${{ needs.build-macos.outputs.checksums }}" >> pomerium-cli_checksums.txt
          echo "${{ needs.build-windows.outputs.checksums }}" >> pomerium-cli_checksums.txt
          echo "${{ needs.goreleaser.outputs.checksums }}" >> pomerium-cli_checksums.txt
          gh release upload "${{ github.event.release.tag_name }}" pomerium-cli_checksums.txt
