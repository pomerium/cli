// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/api.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol int32

const (
	Protocol_UNKNOWN Protocol = 0
	Protocol_TCP     Protocol = 1
	Protocol_UDP     Protocol = 2
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "UNKNOWN",
		1: "TCP",
		2: "UDP",
	}
	Protocol_value = map[string]int32{
		"UNKNOWN": 0,
		"TCP":     1,
		"UDP":     2,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[0].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[0]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

type ExportRequest_Format int32

const (
	ExportRequest_EXPORT_FORMAT_UNDEFINED    ExportRequest_Format = 0
	ExportRequest_EXPORT_FORMAT_JSON_COMPACT ExportRequest_Format = 1
	ExportRequest_EXPORT_FORMAT_JSON_PRETTY  ExportRequest_Format = 2
)

// Enum value maps for ExportRequest_Format.
var (
	ExportRequest_Format_name = map[int32]string{
		0: "EXPORT_FORMAT_UNDEFINED",
		1: "EXPORT_FORMAT_JSON_COMPACT",
		2: "EXPORT_FORMAT_JSON_PRETTY",
	}
	ExportRequest_Format_value = map[string]int32{
		"EXPORT_FORMAT_UNDEFINED":    0,
		"EXPORT_FORMAT_JSON_COMPACT": 1,
		"EXPORT_FORMAT_JSON_PRETTY":  2,
	}
)

func (x ExportRequest_Format) Enum() *ExportRequest_Format {
	p := new(ExportRequest_Format)
	*p = x
	return p
}

func (x ExportRequest_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportRequest_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[1].Descriptor()
}

func (ExportRequest_Format) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[1]
}

func (x ExportRequest_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportRequest_Format.Descriptor instead.
func (ExportRequest_Format) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4, 0}
}

type ConnectionStatusUpdate_ConnectionStatus int32

const (
	ConnectionStatusUpdate_CONNECTION_STATUS_UNDEFINED     ConnectionStatusUpdate_ConnectionStatus = 0
	ConnectionStatusUpdate_CONNECTION_STATUS_CONNECTING    ConnectionStatusUpdate_ConnectionStatus = 1
	ConnectionStatusUpdate_CONNECTION_STATUS_AUTH_REQUIRED ConnectionStatusUpdate_ConnectionStatus = 2
	ConnectionStatusUpdate_CONNECTION_STATUS_CONNECTED     ConnectionStatusUpdate_ConnectionStatus = 3
	ConnectionStatusUpdate_CONNECTION_STATUS_DISCONNECTED  ConnectionStatusUpdate_ConnectionStatus = 4
	// listener is up; peer_addr would not be set
	ConnectionStatusUpdate_CONNECTION_STATUS_LISTENING ConnectionStatusUpdate_ConnectionStatus = 5
	// listener is closed; peer_addr would not be set
	ConnectionStatusUpdate_CONNECTION_STATUS_CLOSED ConnectionStatusUpdate_ConnectionStatus = 6
)

// Enum value maps for ConnectionStatusUpdate_ConnectionStatus.
var (
	ConnectionStatusUpdate_ConnectionStatus_name = map[int32]string{
		0: "CONNECTION_STATUS_UNDEFINED",
		1: "CONNECTION_STATUS_CONNECTING",
		2: "CONNECTION_STATUS_AUTH_REQUIRED",
		3: "CONNECTION_STATUS_CONNECTED",
		4: "CONNECTION_STATUS_DISCONNECTED",
		5: "CONNECTION_STATUS_LISTENING",
		6: "CONNECTION_STATUS_CLOSED",
	}
	ConnectionStatusUpdate_ConnectionStatus_value = map[string]int32{
		"CONNECTION_STATUS_UNDEFINED":     0,
		"CONNECTION_STATUS_CONNECTING":    1,
		"CONNECTION_STATUS_AUTH_REQUIRED": 2,
		"CONNECTION_STATUS_CONNECTED":     3,
		"CONNECTION_STATUS_DISCONNECTED":  4,
		"CONNECTION_STATUS_LISTENING":     5,
		"CONNECTION_STATUS_CLOSED":        6,
	}
)

func (x ConnectionStatusUpdate_ConnectionStatus) Enum() *ConnectionStatusUpdate_ConnectionStatus {
	p := new(ConnectionStatusUpdate_ConnectionStatus)
	*p = x
	return p
}

func (x ConnectionStatusUpdate_ConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionStatusUpdate_ConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[2].Descriptor()
}

func (ConnectionStatusUpdate_ConnectionStatus) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[2]
}

func (x ConnectionStatusUpdate_ConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionStatusUpdate_ConnectionStatus.Descriptor instead.
func (ConnectionStatusUpdate_ConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{17, 0}
}

// Record represents a single tunnel record in the configuration
type Record struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// if omitted, a new record would be created
	Id   *string  `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	// connection data may be omitted if i.e. just manipulating the tags data
	Conn          *Connection `protobuf:"bytes,3,opt,name=conn,proto3,oneof" json:"conn,omitempty"`
	Source        *string     `protobuf:"bytes,4,opt,name=source,proto3,oneof" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_proto_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *Record) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Record) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Record) GetConn() *Connection {
	if x != nil {
		return x.Conn
	}
	return nil
}

func (x *Record) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type Records struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*Record              `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Records) Reset() {
	*x = Records{}
	mi := &file_proto_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Records) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Records) ProtoMessage() {}

func (x *Records) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Records.ProtoReflect.Descriptor instead.
func (*Records) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *Records) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

// Selector defines record filter
// one of the options must be set
// we do not use oneof as it results in inconveniences on the JS client side
type Selector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// all records
	All bool `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	// only return connections matching tag(s)
	Ids []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	// only return specific connection(s)
	Tags          []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Selector) Reset() {
	*x = Selector{}
	mi := &file_proto_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selector) ProtoMessage() {}

func (x *Selector) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selector.ProtoReflect.Descriptor instead.
func (*Selector) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

func (x *Selector) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *Selector) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *Selector) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DeleteRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRecordsResponse) Reset() {
	*x = DeleteRecordsResponse{}
	mi := &file_proto_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordsResponse) ProtoMessage() {}

func (x *DeleteRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordsResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

// Export dumps configuration (or subset of, based on provided tag filter)
// in the JSON format
type ExportRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Selector *Selector              `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// remove_tags to strip tags from output
	RemoveTags    bool                 `protobuf:"varint,2,opt,name=remove_tags,json=removeTags,proto3" json:"remove_tags,omitempty"`
	Format        ExportRequest_Format `protobuf:"varint,3,opt,name=format,proto3,enum=pomerium.cli.ExportRequest_Format" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	mi := &file_proto_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

func (x *ExportRequest) GetSelector() *Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *ExportRequest) GetRemoveTags() bool {
	if x != nil {
		return x.RemoveTags
	}
	return false
}

func (x *ExportRequest) GetFormat() ExportRequest_Format {
	if x != nil {
		return x.Format
	}
	return ExportRequest_EXPORT_FORMAT_UNDEFINED
}

type GetTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTagsRequest) Reset() {
	*x = GetTagsRequest{}
	mi := &file_proto_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagsRequest) ProtoMessage() {}

func (x *GetTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagsRequest.ProtoReflect.Descriptor instead.
func (*GetTagsRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

type GetTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []string               `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTagsResponse) Reset() {
	*x = GetTagsResponse{}
	mi := &file_proto_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagsResponse) ProtoMessage() {}

func (x *GetTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagsResponse.ProtoReflect.Descriptor instead.
func (*GetTagsResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetTagsResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ConfigData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigData) Reset() {
	*x = ConfigData{}
	mi := &file_proto_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigData) ProtoMessage() {}

func (x *ConfigData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigData.ProtoReflect.Descriptor instead.
func (*ConfigData) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ImportRequest would consume the previously exported data back,
// merging it with existing configuration,
// and performing de-duplication of the records so that multiple imports would
// yield the same result
type ImportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// if set, all connections would receive that tag instead
	OverrideTag   *string `protobuf:"bytes,1,opt,name=override_tag,json=overrideTag,proto3,oneof" json:"override_tag,omitempty"`
	Data          []byte  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportRequest) Reset() {
	*x = ImportRequest{}
	mi := &file_proto_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportRequest) ProtoMessage() {}

func (x *ImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportRequest.ProtoReflect.Descriptor instead.
func (*ImportRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{8}
}

func (x *ImportRequest) GetOverrideTag() string {
	if x != nil && x.OverrideTag != nil {
		return *x.OverrideTag
	}
	return ""
}

func (x *ImportRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ImportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportResponse) Reset() {
	*x = ImportResponse{}
	mi := &file_proto_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportResponse) ProtoMessage() {}

func (x *ImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportResponse.ProtoReflect.Descriptor instead.
func (*ImportResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{9}
}

type ListenerUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// omit connection ids to connect all connections
	ConnectionIds []string `protobuf:"bytes,1,rep,name=connection_ids,json=connectionIds,proto3" json:"connection_ids,omitempty"`
	Connected     bool     `protobuf:"varint,2,opt,name=connected,proto3" json:"connected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListenerUpdateRequest) Reset() {
	*x = ListenerUpdateRequest{}
	mi := &file_proto_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListenerUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerUpdateRequest) ProtoMessage() {}

func (x *ListenerUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerUpdateRequest.ProtoReflect.Descriptor instead.
func (*ListenerUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{10}
}

func (x *ListenerUpdateRequest) GetConnectionIds() []string {
	if x != nil {
		return x.ConnectionIds
	}
	return nil
}

func (x *ListenerUpdateRequest) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

type ListenerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Listening     bool                   `protobuf:"varint,1,opt,name=listening,proto3" json:"listening,omitempty"`
	ListenAddr    *string                `protobuf:"bytes,2,opt,name=listen_addr,json=listenAddr,proto3,oneof" json:"listen_addr,omitempty"`
	LastError     *string                `protobuf:"bytes,3,opt,name=last_error,json=lastError,proto3,oneof" json:"last_error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListenerStatus) Reset() {
	*x = ListenerStatus{}
	mi := &file_proto_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListenerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerStatus) ProtoMessage() {}

func (x *ListenerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerStatus.ProtoReflect.Descriptor instead.
func (*ListenerStatus) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{11}
}

func (x *ListenerStatus) GetListening() bool {
	if x != nil {
		return x.Listening
	}
	return false
}

func (x *ListenerStatus) GetListenAddr() string {
	if x != nil && x.ListenAddr != nil {
		return *x.ListenAddr
	}
	return ""
}

func (x *ListenerStatus) GetLastError() string {
	if x != nil && x.LastError != nil {
		return *x.LastError
	}
	return ""
}

type ListenerStatusResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Listeners     map[string]*ListenerStatus `protobuf:"bytes,1,rep,name=listeners,proto3" json:"listeners,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListenerStatusResponse) Reset() {
	*x = ListenerStatusResponse{}
	mi := &file_proto_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListenerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerStatusResponse) ProtoMessage() {}

func (x *ListenerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerStatusResponse.ProtoReflect.Descriptor instead.
func (*ListenerStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{12}
}

func (x *ListenerStatusResponse) GetListeners() map[string]*ListenerStatus {
	if x != nil {
		return x.Listeners
	}
	return nil
}

type StatusUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusUpdatesRequest) Reset() {
	*x = StatusUpdatesRequest{}
	mi := &file_proto_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdatesRequest) ProtoMessage() {}

func (x *StatusUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdatesRequest.ProtoReflect.Descriptor instead.
func (*StatusUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{13}
}

func (x *StatusUpdatesRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type FetchRoutesRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ServerUrl string                 `protobuf:"bytes,1,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"`
	// Types that are valid to be assigned to TlsOptions:
	//
	//	*FetchRoutesRequest_DisableTlsVerification
	//	*FetchRoutesRequest_CaCert
	TlsOptions          isFetchRoutesRequest_TlsOptions `protobuf_oneof:"tls_options"`
	ClientCert          *Certificate                    `protobuf:"bytes,4,opt,name=client_cert,json=clientCert,proto3,oneof" json:"client_cert,omitempty"`
	ClientCertFromStore *ClientCertFromStore            `protobuf:"bytes,5,opt,name=client_cert_from_store,json=clientCertFromStore,proto3,oneof" json:"client_cert_from_store,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FetchRoutesRequest) Reset() {
	*x = FetchRoutesRequest{}
	mi := &file_proto_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRoutesRequest) ProtoMessage() {}

func (x *FetchRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRoutesRequest.ProtoReflect.Descriptor instead.
func (*FetchRoutesRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{14}
}

func (x *FetchRoutesRequest) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *FetchRoutesRequest) GetTlsOptions() isFetchRoutesRequest_TlsOptions {
	if x != nil {
		return x.TlsOptions
	}
	return nil
}

func (x *FetchRoutesRequest) GetDisableTlsVerification() bool {
	if x != nil {
		if x, ok := x.TlsOptions.(*FetchRoutesRequest_DisableTlsVerification); ok {
			return x.DisableTlsVerification
		}
	}
	return false
}

func (x *FetchRoutesRequest) GetCaCert() []byte {
	if x != nil {
		if x, ok := x.TlsOptions.(*FetchRoutesRequest_CaCert); ok {
			return x.CaCert
		}
	}
	return nil
}

func (x *FetchRoutesRequest) GetClientCert() *Certificate {
	if x != nil {
		return x.ClientCert
	}
	return nil
}

func (x *FetchRoutesRequest) GetClientCertFromStore() *ClientCertFromStore {
	if x != nil {
		return x.ClientCertFromStore
	}
	return nil
}

type isFetchRoutesRequest_TlsOptions interface {
	isFetchRoutesRequest_TlsOptions()
}

type FetchRoutesRequest_DisableTlsVerification struct {
	DisableTlsVerification bool `protobuf:"varint,2,opt,name=disable_tls_verification,json=disableTlsVerification,proto3,oneof"`
}

type FetchRoutesRequest_CaCert struct {
	CaCert []byte `protobuf:"bytes,3,opt,name=ca_cert,json=caCert,proto3,oneof"`
}

func (*FetchRoutesRequest_DisableTlsVerification) isFetchRoutesRequest_TlsOptions() {}

func (*FetchRoutesRequest_CaCert) isFetchRoutesRequest_TlsOptions() {}

type FetchRoutesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*PortalRoute         `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRoutesResponse) Reset() {
	*x = FetchRoutesResponse{}
	mi := &file_proto_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRoutesResponse) ProtoMessage() {}

func (x *FetchRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRoutesResponse.ProtoReflect.Descriptor instead.
func (*FetchRoutesResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{15}
}

func (x *FetchRoutesResponse) GetRoutes() []*PortalRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

type PortalRoute struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type           string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	From           string                 `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	Description    string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ConnectCommand *string                `protobuf:"bytes,6,opt,name=connect_command,json=connectCommand,proto3,oneof" json:"connect_command,omitempty"`
	LogoUrl        string                 `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PortalRoute) Reset() {
	*x = PortalRoute{}
	mi := &file_proto_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortalRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalRoute) ProtoMessage() {}

func (x *PortalRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalRoute.ProtoReflect.Descriptor instead.
func (*PortalRoute) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{16}
}

func (x *PortalRoute) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PortalRoute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortalRoute) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PortalRoute) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *PortalRoute) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PortalRoute) GetConnectCommand() string {
	if x != nil && x.ConnectCommand != nil {
		return *x.ConnectCommand
	}
	return ""
}

func (x *PortalRoute) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

// ConnectionStatusUpdates represent connection state changes
type ConnectionStatusUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// record this event relates to
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// peer_addr represents connecting party remote address and may be used to
	// distinguish between individual TCP connections
	PeerAddr *string                                 `protobuf:"bytes,2,opt,name=peer_addr,json=peerAddr,proto3,oneof" json:"peer_addr,omitempty"`
	Status   ConnectionStatusUpdate_ConnectionStatus `protobuf:"varint,3,opt,name=status,proto3,enum=pomerium.cli.ConnectionStatusUpdate_ConnectionStatus" json:"status,omitempty"`
	// in case the connection failed or terminated, last error may be available
	LastError *string `protobuf:"bytes,4,opt,name=last_error,json=lastError,proto3,oneof" json:"last_error,omitempty"`
	// provides an authentication URL when AUTH_REQUIRED status is set
	AuthUrl *string `protobuf:"bytes,5,opt,name=auth_url,json=authUrl,proto3,oneof" json:"auth_url,omitempty"`
	// event timestamp
	Ts            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionStatusUpdate) Reset() {
	*x = ConnectionStatusUpdate{}
	mi := &file_proto_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionStatusUpdate) ProtoMessage() {}

func (x *ConnectionStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionStatusUpdate.ProtoReflect.Descriptor instead.
func (*ConnectionStatusUpdate) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{17}
}

func (x *ConnectionStatusUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectionStatusUpdate) GetPeerAddr() string {
	if x != nil && x.PeerAddr != nil {
		return *x.PeerAddr
	}
	return ""
}

func (x *ConnectionStatusUpdate) GetStatus() ConnectionStatusUpdate_ConnectionStatus {
	if x != nil {
		return x.Status
	}
	return ConnectionStatusUpdate_CONNECTION_STATUS_UNDEFINED
}

func (x *ConnectionStatusUpdate) GetLastError() string {
	if x != nil && x.LastError != nil {
		return *x.LastError
	}
	return ""
}

func (x *ConnectionStatusUpdate) GetAuthUrl() string {
	if x != nil && x.AuthUrl != nil {
		return *x.AuthUrl
	}
	return ""
}

func (x *ConnectionStatusUpdate) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

type KeyUsage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// standard key usages
	DigitalSignature  bool `protobuf:"varint,1,opt,name=digital_signature,json=digitalSignature,proto3" json:"digital_signature,omitempty"`
	ContentCommitment bool `protobuf:"varint,2,opt,name=content_commitment,json=contentCommitment,proto3" json:"content_commitment,omitempty"`
	KeyEncipherment   bool `protobuf:"varint,3,opt,name=key_encipherment,json=keyEncipherment,proto3" json:"key_encipherment,omitempty"`
	DataEncipherment  bool `protobuf:"varint,4,opt,name=data_encipherment,json=dataEncipherment,proto3" json:"data_encipherment,omitempty"`
	KeyAgreement      bool `protobuf:"varint,5,opt,name=key_agreement,json=keyAgreement,proto3" json:"key_agreement,omitempty"`
	// certificate authority
	CertSign     bool `protobuf:"varint,6,opt,name=cert_sign,json=certSign,proto3" json:"cert_sign,omitempty"`
	CrlSign      bool `protobuf:"varint,7,opt,name=crl_sign,json=crlSign,proto3" json:"crl_sign,omitempty"`
	EncipherOnly bool `protobuf:"varint,8,opt,name=encipher_only,json=encipherOnly,proto3" json:"encipher_only,omitempty"`
	DecipherOnly bool `protobuf:"varint,9,opt,name=decipher_only,json=decipherOnly,proto3" json:"decipher_only,omitempty"`
	// extensions derived from x509.ExtKeyUsage
	// server certificate
	ServerAuth bool `protobuf:"varint,10,opt,name=server_auth,json=serverAuth,proto3" json:"server_auth,omitempty"`
	// client certificate
	ClientAuth    bool `protobuf:"varint,11,opt,name=client_auth,json=clientAuth,proto3" json:"client_auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyUsage) Reset() {
	*x = KeyUsage{}
	mi := &file_proto_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyUsage) ProtoMessage() {}

func (x *KeyUsage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyUsage.ProtoReflect.Descriptor instead.
func (*KeyUsage) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{18}
}

func (x *KeyUsage) GetDigitalSignature() bool {
	if x != nil {
		return x.DigitalSignature
	}
	return false
}

func (x *KeyUsage) GetContentCommitment() bool {
	if x != nil {
		return x.ContentCommitment
	}
	return false
}

func (x *KeyUsage) GetKeyEncipherment() bool {
	if x != nil {
		return x.KeyEncipherment
	}
	return false
}

func (x *KeyUsage) GetDataEncipherment() bool {
	if x != nil {
		return x.DataEncipherment
	}
	return false
}

func (x *KeyUsage) GetKeyAgreement() bool {
	if x != nil {
		return x.KeyAgreement
	}
	return false
}

func (x *KeyUsage) GetCertSign() bool {
	if x != nil {
		return x.CertSign
	}
	return false
}

func (x *KeyUsage) GetCrlSign() bool {
	if x != nil {
		return x.CrlSign
	}
	return false
}

func (x *KeyUsage) GetEncipherOnly() bool {
	if x != nil {
		return x.EncipherOnly
	}
	return false
}

func (x *KeyUsage) GetDecipherOnly() bool {
	if x != nil {
		return x.DecipherOnly
	}
	return false
}

func (x *KeyUsage) GetServerAuth() bool {
	if x != nil {
		return x.ServerAuth
	}
	return false
}

func (x *KeyUsage) GetClientAuth() bool {
	if x != nil {
		return x.ClientAuth
	}
	return false
}

// Name defines the x509 identity
type Name struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Country            []string               `protobuf:"bytes,1,rep,name=country,proto3" json:"country,omitempty"`
	Organization       []string               `protobuf:"bytes,2,rep,name=organization,proto3" json:"organization,omitempty"`
	OrganizationalUnit []string               `protobuf:"bytes,3,rep,name=organizational_unit,json=organizationalUnit,proto3" json:"organizational_unit,omitempty"`
	Locality           []string               `protobuf:"bytes,4,rep,name=locality,proto3" json:"locality,omitempty"`
	Province           []string               `protobuf:"bytes,5,rep,name=province,proto3" json:"province,omitempty"`
	StreetAddress      []string               `protobuf:"bytes,6,rep,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	PostalCode         []string               `protobuf:"bytes,7,rep,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	SerialNumber       string                 `protobuf:"bytes,8,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	CommonName         string                 `protobuf:"bytes,9,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Name) Reset() {
	*x = Name{}
	mi := &file_proto_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{19}
}

func (x *Name) GetCountry() []string {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *Name) GetOrganization() []string {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *Name) GetOrganizationalUnit() []string {
	if x != nil {
		return x.OrganizationalUnit
	}
	return nil
}

func (x *Name) GetLocality() []string {
	if x != nil {
		return x.Locality
	}
	return nil
}

func (x *Name) GetProvince() []string {
	if x != nil {
		return x.Province
	}
	return nil
}

func (x *Name) GetStreetAddress() []string {
	if x != nil {
		return x.StreetAddress
	}
	return nil
}

func (x *Name) GetPostalCode() []string {
	if x != nil {
		return x.PostalCode
	}
	return nil
}

func (x *Name) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Name) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

type CertificateInfo struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Version                     int64                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Serial                      string                 `protobuf:"bytes,2,opt,name=serial,proto3" json:"serial,omitempty"`
	Issuer                      *Name                  `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Subject                     *Name                  `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	NotBefore                   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter                    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	KeyUsage                    *KeyUsage              `protobuf:"bytes,7,opt,name=key_usage,json=keyUsage,proto3" json:"key_usage,omitempty"`
	DnsNames                    []string               `protobuf:"bytes,10,rep,name=dns_names,json=dnsNames,proto3" json:"dns_names,omitempty"`
	EmailAddresses              []string               `protobuf:"bytes,11,rep,name=email_addresses,json=emailAddresses,proto3" json:"email_addresses,omitempty"`
	IpAddresses                 []string               `protobuf:"bytes,12,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	Uris                        []string               `protobuf:"bytes,13,rep,name=uris,proto3" json:"uris,omitempty"`
	PermittedDnsDomainsCritical bool                   `protobuf:"varint,14,opt,name=permitted_dns_domains_critical,json=permittedDnsDomainsCritical,proto3" json:"permitted_dns_domains_critical,omitempty"`
	PermittedDnsDomains         []string               `protobuf:"bytes,15,rep,name=permitted_dns_domains,json=permittedDnsDomains,proto3" json:"permitted_dns_domains,omitempty"`
	ExcludedDnsDomains          []string               `protobuf:"bytes,16,rep,name=excluded_dns_domains,json=excludedDnsDomains,proto3" json:"excluded_dns_domains,omitempty"`
	PermittedIpRanges           []string               `protobuf:"bytes,17,rep,name=permitted_ip_ranges,json=permittedIpRanges,proto3" json:"permitted_ip_ranges,omitempty"`
	ExcludedIpRanges            []string               `protobuf:"bytes,18,rep,name=excluded_ip_ranges,json=excludedIpRanges,proto3" json:"excluded_ip_ranges,omitempty"`
	PermittedEmailAddresses     []string               `protobuf:"bytes,19,rep,name=permitted_email_addresses,json=permittedEmailAddresses,proto3" json:"permitted_email_addresses,omitempty"`
	ExcludedEmailAddresses      []string               `protobuf:"bytes,20,rep,name=excluded_email_addresses,json=excludedEmailAddresses,proto3" json:"excluded_email_addresses,omitempty"`
	PermittedUriDomains         []string               `protobuf:"bytes,21,rep,name=permitted_uri_domains,json=permittedUriDomains,proto3" json:"permitted_uri_domains,omitempty"`
	ExcludedUriDomains          []string               `protobuf:"bytes,22,rep,name=excluded_uri_domains,json=excludedUriDomains,proto3" json:"excluded_uri_domains,omitempty"`
	// error is set if there was an error parsing provided certificate
	Error         *string `protobuf:"bytes,23,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertificateInfo) Reset() {
	*x = CertificateInfo{}
	mi := &file_proto_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateInfo) ProtoMessage() {}

func (x *CertificateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateInfo.ProtoReflect.Descriptor instead.
func (*CertificateInfo) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{20}
}

func (x *CertificateInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CertificateInfo) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *CertificateInfo) GetIssuer() *Name {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *CertificateInfo) GetSubject() *Name {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *CertificateInfo) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *CertificateInfo) GetNotAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.NotAfter
	}
	return nil
}

func (x *CertificateInfo) GetKeyUsage() *KeyUsage {
	if x != nil {
		return x.KeyUsage
	}
	return nil
}

func (x *CertificateInfo) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

func (x *CertificateInfo) GetEmailAddresses() []string {
	if x != nil {
		return x.EmailAddresses
	}
	return nil
}

func (x *CertificateInfo) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *CertificateInfo) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

func (x *CertificateInfo) GetPermittedDnsDomainsCritical() bool {
	if x != nil {
		return x.PermittedDnsDomainsCritical
	}
	return false
}

func (x *CertificateInfo) GetPermittedDnsDomains() []string {
	if x != nil {
		return x.PermittedDnsDomains
	}
	return nil
}

func (x *CertificateInfo) GetExcludedDnsDomains() []string {
	if x != nil {
		return x.ExcludedDnsDomains
	}
	return nil
}

func (x *CertificateInfo) GetPermittedIpRanges() []string {
	if x != nil {
		return x.PermittedIpRanges
	}
	return nil
}

func (x *CertificateInfo) GetExcludedIpRanges() []string {
	if x != nil {
		return x.ExcludedIpRanges
	}
	return nil
}

func (x *CertificateInfo) GetPermittedEmailAddresses() []string {
	if x != nil {
		return x.PermittedEmailAddresses
	}
	return nil
}

func (x *CertificateInfo) GetExcludedEmailAddresses() []string {
	if x != nil {
		return x.ExcludedEmailAddresses
	}
	return nil
}

func (x *CertificateInfo) GetPermittedUriDomains() []string {
	if x != nil {
		return x.PermittedUriDomains
	}
	return nil
}

func (x *CertificateInfo) GetExcludedUriDomains() []string {
	if x != nil {
		return x.ExcludedUriDomains
	}
	return nil
}

func (x *CertificateInfo) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type Certificate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Cert  []byte                 `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key   []byte                 `protobuf:"bytes,2,opt,name=key,proto3,oneof" json:"key,omitempty"`
	// info field is ignored during upsert requests
	// and is set when returning certificate info
	Info          *CertificateInfo `protobuf:"bytes,3,opt,name=info,proto3,oneof" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	mi := &file_proto_api_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{21}
}

func (x *Certificate) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *Certificate) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Certificate) GetInfo() *CertificateInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// ClientCertFromStore contains additional filters to apply when searching for
// a client certificate in the system trust store. (This search will always
// take into account any CA names from the TLS CertificateRequest message.)
type ClientCertFromStore struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// filters based on a single name attribute (e.g. "CN=my cert" or "O=my org")
	IssuerFilter  *string `protobuf:"bytes,1,opt,name=issuer_filter,json=issuerFilter,proto3,oneof" json:"issuer_filter,omitempty"`
	SubjectFilter *string `protobuf:"bytes,2,opt,name=subject_filter,json=subjectFilter,proto3,oneof" json:"subject_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientCertFromStore) Reset() {
	*x = ClientCertFromStore{}
	mi := &file_proto_api_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCertFromStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCertFromStore) ProtoMessage() {}

func (x *ClientCertFromStore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCertFromStore.ProtoReflect.Descriptor instead.
func (*ClientCertFromStore) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{22}
}

func (x *ClientCertFromStore) GetIssuerFilter() string {
	if x != nil && x.IssuerFilter != nil {
		return *x.IssuerFilter
	}
	return ""
}

func (x *ClientCertFromStore) GetSubjectFilter() string {
	if x != nil && x.SubjectFilter != nil {
		return *x.SubjectFilter
	}
	return ""
}

// Connection
type Connection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is a user friendly connection name that a user may define
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// the protocol to use for the connection
	Protocol *Protocol `protobuf:"varint,10,opt,name=protocol,proto3,enum=pomerium.cli.Protocol,oneof" json:"protocol,omitempty"`
	// remote_addr is a remote pomerium host:port
	RemoteAddr string `protobuf:"bytes,2,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	// listen_address, if not provided, will assign a random port each time
	ListenAddr *string `protobuf:"bytes,3,opt,name=listen_addr,json=listenAddr,proto3,oneof" json:"listen_addr,omitempty"`
	// the URL of the pomerium server to connect to
	PomeriumUrl *string `protobuf:"bytes,4,opt,name=pomerium_url,json=pomeriumUrl,proto3,oneof" json:"pomerium_url,omitempty"`
	// Types that are valid to be assigned to TlsOptions:
	//
	//	*Connection_DisableTlsVerification
	//	*Connection_CaCert
	TlsOptions isConnection_TlsOptions `protobuf_oneof:"tls_options"`
	ClientCert *Certificate            `protobuf:"bytes,7,opt,name=client_cert,json=clientCert,proto3,oneof" json:"client_cert,omitempty"`
	// indicates to search the system trust store for a client certificate
	ClientCertFromStore *ClientCertFromStore `protobuf:"bytes,9,opt,name=client_cert_from_store,json=clientCertFromStore,proto3,oneof" json:"client_cert_from_store,omitempty"`
	Autostart           *bool                `protobuf:"varint,11,opt,name=autostart,proto3,oneof" json:"autostart,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Connection) Reset() {
	*x = Connection{}
	mi := &file_proto_api_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{23}
}

func (x *Connection) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Connection) GetProtocol() Protocol {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return Protocol_UNKNOWN
}

func (x *Connection) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *Connection) GetListenAddr() string {
	if x != nil && x.ListenAddr != nil {
		return *x.ListenAddr
	}
	return ""
}

func (x *Connection) GetPomeriumUrl() string {
	if x != nil && x.PomeriumUrl != nil {
		return *x.PomeriumUrl
	}
	return ""
}

func (x *Connection) GetTlsOptions() isConnection_TlsOptions {
	if x != nil {
		return x.TlsOptions
	}
	return nil
}

func (x *Connection) GetDisableTlsVerification() bool {
	if x != nil {
		if x, ok := x.TlsOptions.(*Connection_DisableTlsVerification); ok {
			return x.DisableTlsVerification
		}
	}
	return false
}

func (x *Connection) GetCaCert() []byte {
	if x != nil {
		if x, ok := x.TlsOptions.(*Connection_CaCert); ok {
			return x.CaCert
		}
	}
	return nil
}

func (x *Connection) GetClientCert() *Certificate {
	if x != nil {
		return x.ClientCert
	}
	return nil
}

func (x *Connection) GetClientCertFromStore() *ClientCertFromStore {
	if x != nil {
		return x.ClientCertFromStore
	}
	return nil
}

func (x *Connection) GetAutostart() bool {
	if x != nil && x.Autostart != nil {
		return *x.Autostart
	}
	return false
}

type isConnection_TlsOptions interface {
	isConnection_TlsOptions()
}

type Connection_DisableTlsVerification struct {
	DisableTlsVerification bool `protobuf:"varint,5,opt,name=disable_tls_verification,json=disableTlsVerification,proto3,oneof"`
}

type Connection_CaCert struct {
	CaCert []byte `protobuf:"bytes,6,opt,name=ca_cert,json=caCert,proto3,oneof"`
}

func (*Connection_DisableTlsVerification) isConnection_TlsOptions() {}

func (*Connection_CaCert) isConnection_TlsOptions() {}

var File_proto_api_proto protoreflect.FileDescriptor

const file_proto_api_proto_rawDesc = "" +
	"\n" +
	"\x0fproto/api.proto\x12\fpomerium.cli\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9c\x01\n" +
	"\x06Record\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x121\n" +
	"\x04conn\x18\x03 \x01(\v2\x18.pomerium.cli.ConnectionH\x01R\x04conn\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x04 \x01(\tH\x02R\x06source\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_connB\t\n" +
	"\a_source\"9\n" +
	"\aRecords\x12.\n" +
	"\arecords\x18\x01 \x03(\v2\x14.pomerium.cli.RecordR\arecords\"B\n" +
	"\bSelector\x12\x10\n" +
	"\x03all\x18\x01 \x01(\bR\x03all\x12\x10\n" +
	"\x03ids\x18\x02 \x03(\tR\x03ids\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\"\x17\n" +
	"\x15DeleteRecordsResponse\"\x86\x02\n" +
	"\rExportRequest\x122\n" +
	"\bselector\x18\x01 \x01(\v2\x16.pomerium.cli.SelectorR\bselector\x12\x1f\n" +
	"\vremove_tags\x18\x02 \x01(\bR\n" +
	"removeTags\x12:\n" +
	"\x06format\x18\x03 \x01(\x0e2\".pomerium.cli.ExportRequest.FormatR\x06format\"d\n" +
	"\x06Format\x12\x1b\n" +
	"\x17EXPORT_FORMAT_UNDEFINED\x10\x00\x12\x1e\n" +
	"\x1aEXPORT_FORMAT_JSON_COMPACT\x10\x01\x12\x1d\n" +
	"\x19EXPORT_FORMAT_JSON_PRETTY\x10\x02\"\x10\n" +
	"\x0eGetTagsRequest\"%\n" +
	"\x0fGetTagsResponse\x12\x12\n" +
	"\x04tags\x18\x01 \x03(\tR\x04tags\" \n" +
	"\n" +
	"ConfigData\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\\\n" +
	"\rImportRequest\x12&\n" +
	"\foverride_tag\x18\x01 \x01(\tH\x00R\voverrideTag\x88\x01\x01\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04dataB\x0f\n" +
	"\r_override_tag\"\x10\n" +
	"\x0eImportResponse\"\\\n" +
	"\x15ListenerUpdateRequest\x12%\n" +
	"\x0econnection_ids\x18\x01 \x03(\tR\rconnectionIds\x12\x1c\n" +
	"\tconnected\x18\x02 \x01(\bR\tconnected\"\x97\x01\n" +
	"\x0eListenerStatus\x12\x1c\n" +
	"\tlistening\x18\x01 \x01(\bR\tlistening\x12$\n" +
	"\vlisten_addr\x18\x02 \x01(\tH\x00R\n" +
	"listenAddr\x88\x01\x01\x12\"\n" +
	"\n" +
	"last_error\x18\x03 \x01(\tH\x01R\tlastError\x88\x01\x01B\x0e\n" +
	"\f_listen_addrB\r\n" +
	"\v_last_error\"\xc7\x01\n" +
	"\x16ListenerStatusResponse\x12Q\n" +
	"\tlisteners\x18\x01 \x03(\v23.pomerium.cli.ListenerStatusResponse.ListenersEntryR\tlisteners\x1aZ\n" +
	"\x0eListenersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.pomerium.cli.ListenerStatusR\x05value:\x028\x01\";\n" +
	"\x14StatusUpdatesRequest\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\"\xe2\x02\n" +
	"\x12FetchRoutesRequest\x12\x1d\n" +
	"\n" +
	"server_url\x18\x01 \x01(\tR\tserverUrl\x12:\n" +
	"\x18disable_tls_verification\x18\x02 \x01(\bH\x00R\x16disableTlsVerification\x12\x19\n" +
	"\aca_cert\x18\x03 \x01(\fH\x00R\x06caCert\x12?\n" +
	"\vclient_cert\x18\x04 \x01(\v2\x19.pomerium.cli.CertificateH\x01R\n" +
	"clientCert\x88\x01\x01\x12[\n" +
	"\x16client_cert_from_store\x18\x05 \x01(\v2!.pomerium.cli.ClientCertFromStoreH\x02R\x13clientCertFromStore\x88\x01\x01B\r\n" +
	"\vtls_optionsB\x0e\n" +
	"\f_client_certB\x19\n" +
	"\x17_client_cert_from_store\"H\n" +
	"\x13FetchRoutesResponse\x121\n" +
	"\x06routes\x18\x01 \x03(\v2\x19.pomerium.cli.PortalRouteR\x06routes\"\xd8\x01\n" +
	"\vPortalRoute\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04from\x18\x04 \x01(\tR\x04from\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12,\n" +
	"\x0fconnect_command\x18\x06 \x01(\tH\x00R\x0econnectCommand\x88\x01\x01\x12\x19\n" +
	"\blogo_url\x18\a \x01(\tR\alogoUrlB\x12\n" +
	"\x10_connect_command\"\xb4\x04\n" +
	"\x16ConnectionStatusUpdate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\tpeer_addr\x18\x02 \x01(\tH\x00R\bpeerAddr\x88\x01\x01\x12M\n" +
	"\x06status\x18\x03 \x01(\x0e25.pomerium.cli.ConnectionStatusUpdate.ConnectionStatusR\x06status\x12\"\n" +
	"\n" +
	"last_error\x18\x04 \x01(\tH\x01R\tlastError\x88\x01\x01\x12\x1e\n" +
	"\bauth_url\x18\x05 \x01(\tH\x02R\aauthUrl\x88\x01\x01\x12*\n" +
	"\x02ts\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x02ts\"\xfe\x01\n" +
	"\x10ConnectionStatus\x12\x1f\n" +
	"\x1bCONNECTION_STATUS_UNDEFINED\x10\x00\x12 \n" +
	"\x1cCONNECTION_STATUS_CONNECTING\x10\x01\x12#\n" +
	"\x1fCONNECTION_STATUS_AUTH_REQUIRED\x10\x02\x12\x1f\n" +
	"\x1bCONNECTION_STATUS_CONNECTED\x10\x03\x12\"\n" +
	"\x1eCONNECTION_STATUS_DISCONNECTED\x10\x04\x12\x1f\n" +
	"\x1bCONNECTION_STATUS_LISTENING\x10\x05\x12\x1c\n" +
	"\x18CONNECTION_STATUS_CLOSED\x10\x06B\f\n" +
	"\n" +
	"_peer_addrB\r\n" +
	"\v_last_errorB\v\n" +
	"\t_auth_url\"\xa7\x03\n" +
	"\bKeyUsage\x12+\n" +
	"\x11digital_signature\x18\x01 \x01(\bR\x10digitalSignature\x12-\n" +
	"\x12content_commitment\x18\x02 \x01(\bR\x11contentCommitment\x12)\n" +
	"\x10key_encipherment\x18\x03 \x01(\bR\x0fkeyEncipherment\x12+\n" +
	"\x11data_encipherment\x18\x04 \x01(\bR\x10dataEncipherment\x12#\n" +
	"\rkey_agreement\x18\x05 \x01(\bR\fkeyAgreement\x12\x1b\n" +
	"\tcert_sign\x18\x06 \x01(\bR\bcertSign\x12\x19\n" +
	"\bcrl_sign\x18\a \x01(\bR\acrlSign\x12#\n" +
	"\rencipher_only\x18\b \x01(\bR\fencipherOnly\x12#\n" +
	"\rdecipher_only\x18\t \x01(\bR\fdecipherOnly\x12\x1f\n" +
	"\vserver_auth\x18\n" +
	" \x01(\bR\n" +
	"serverAuth\x12\x1f\n" +
	"\vclient_auth\x18\v \x01(\bR\n" +
	"clientAuth\"\xbb\x02\n" +
	"\x04Name\x12\x18\n" +
	"\acountry\x18\x01 \x03(\tR\acountry\x12\"\n" +
	"\forganization\x18\x02 \x03(\tR\forganization\x12/\n" +
	"\x13organizational_unit\x18\x03 \x03(\tR\x12organizationalUnit\x12\x1a\n" +
	"\blocality\x18\x04 \x03(\tR\blocality\x12\x1a\n" +
	"\bprovince\x18\x05 \x03(\tR\bprovince\x12%\n" +
	"\x0estreet_address\x18\x06 \x03(\tR\rstreetAddress\x12\x1f\n" +
	"\vpostal_code\x18\a \x03(\tR\n" +
	"postalCode\x12#\n" +
	"\rserial_number\x18\b \x01(\tR\fserialNumber\x12\x1f\n" +
	"\vcommon_name\x18\t \x01(\tR\n" +
	"commonName\"\xcd\a\n" +
	"\x0fCertificateInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\x12\x16\n" +
	"\x06serial\x18\x02 \x01(\tR\x06serial\x12*\n" +
	"\x06issuer\x18\x03 \x01(\v2\x12.pomerium.cli.NameR\x06issuer\x12,\n" +
	"\asubject\x18\x04 \x01(\v2\x12.pomerium.cli.NameR\asubject\x129\n" +
	"\n" +
	"not_before\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tnotBefore\x127\n" +
	"\tnot_after\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bnotAfter\x123\n" +
	"\tkey_usage\x18\a \x01(\v2\x16.pomerium.cli.KeyUsageR\bkeyUsage\x12\x1b\n" +
	"\tdns_names\x18\n" +
	" \x03(\tR\bdnsNames\x12'\n" +
	"\x0femail_addresses\x18\v \x03(\tR\x0eemailAddresses\x12!\n" +
	"\fip_addresses\x18\f \x03(\tR\vipAddresses\x12\x12\n" +
	"\x04uris\x18\r \x03(\tR\x04uris\x12C\n" +
	"\x1epermitted_dns_domains_critical\x18\x0e \x01(\bR\x1bpermittedDnsDomainsCritical\x122\n" +
	"\x15permitted_dns_domains\x18\x0f \x03(\tR\x13permittedDnsDomains\x120\n" +
	"\x14excluded_dns_domains\x18\x10 \x03(\tR\x12excludedDnsDomains\x12.\n" +
	"\x13permitted_ip_ranges\x18\x11 \x03(\tR\x11permittedIpRanges\x12,\n" +
	"\x12excluded_ip_ranges\x18\x12 \x03(\tR\x10excludedIpRanges\x12:\n" +
	"\x19permitted_email_addresses\x18\x13 \x03(\tR\x17permittedEmailAddresses\x128\n" +
	"\x18excluded_email_addresses\x18\x14 \x03(\tR\x16excludedEmailAddresses\x122\n" +
	"\x15permitted_uri_domains\x18\x15 \x03(\tR\x13permittedUriDomains\x120\n" +
	"\x14excluded_uri_domains\x18\x16 \x03(\tR\x12excludedUriDomains\x12\x19\n" +
	"\x05error\x18\x17 \x01(\tH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\x81\x01\n" +
	"\vCertificate\x12\x12\n" +
	"\x04cert\x18\x01 \x01(\fR\x04cert\x12\x15\n" +
	"\x03key\x18\x02 \x01(\fH\x00R\x03key\x88\x01\x01\x126\n" +
	"\x04info\x18\x03 \x01(\v2\x1d.pomerium.cli.CertificateInfoH\x01R\x04info\x88\x01\x01B\x06\n" +
	"\x04_keyB\a\n" +
	"\x05_info\"\x90\x01\n" +
	"\x13ClientCertFromStore\x12(\n" +
	"\rissuer_filter\x18\x01 \x01(\tH\x00R\fissuerFilter\x88\x01\x01\x12*\n" +
	"\x0esubject_filter\x18\x02 \x01(\tH\x01R\rsubjectFilter\x88\x01\x01B\x10\n" +
	"\x0e_issuer_filterB\x11\n" +
	"\x0f_subject_filter\"\xea\x04\n" +
	"\n" +
	"Connection\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x01R\x04name\x88\x01\x01\x127\n" +
	"\bprotocol\x18\n" +
	" \x01(\x0e2\x16.pomerium.cli.ProtocolH\x02R\bprotocol\x88\x01\x01\x12\x1f\n" +
	"\vremote_addr\x18\x02 \x01(\tR\n" +
	"remoteAddr\x12$\n" +
	"\vlisten_addr\x18\x03 \x01(\tH\x03R\n" +
	"listenAddr\x88\x01\x01\x12&\n" +
	"\fpomerium_url\x18\x04 \x01(\tH\x04R\vpomeriumUrl\x88\x01\x01\x12:\n" +
	"\x18disable_tls_verification\x18\x05 \x01(\bH\x00R\x16disableTlsVerification\x12\x19\n" +
	"\aca_cert\x18\x06 \x01(\fH\x00R\x06caCert\x12?\n" +
	"\vclient_cert\x18\a \x01(\v2\x19.pomerium.cli.CertificateH\x05R\n" +
	"clientCert\x88\x01\x01\x12[\n" +
	"\x16client_cert_from_store\x18\t \x01(\v2!.pomerium.cli.ClientCertFromStoreH\x06R\x13clientCertFromStore\x88\x01\x01\x12!\n" +
	"\tautostart\x18\v \x01(\bH\aR\tautostart\x88\x01\x01B\r\n" +
	"\vtls_optionsB\a\n" +
	"\x05_nameB\v\n" +
	"\t_protocolB\x0e\n" +
	"\f_listen_addrB\x0f\n" +
	"\r_pomerium_urlB\x0e\n" +
	"\f_client_certB\x19\n" +
	"\x17_client_cert_from_storeB\f\n" +
	"\n" +
	"_autostartJ\x04\b\b\x10\t*)\n" +
	"\bProtocol\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\a\n" +
	"\x03TCP\x10\x01\x12\a\n" +
	"\x03UDP\x10\x022\xde\x03\n" +
	"\x06Config\x125\n" +
	"\x04List\x12\x16.pomerium.cli.Selector\x1a\x15.pomerium.cli.Records\x12E\n" +
	"\x06Delete\x12\x16.pomerium.cli.Selector\x1a#.pomerium.cli.DeleteRecordsResponse\x124\n" +
	"\x06Upsert\x12\x14.pomerium.cli.Record\x1a\x14.pomerium.cli.Record\x12F\n" +
	"\aGetTags\x12\x1c.pomerium.cli.GetTagsRequest\x1a\x1d.pomerium.cli.GetTagsResponse\x12?\n" +
	"\x06Export\x12\x1b.pomerium.cli.ExportRequest\x1a\x18.pomerium.cli.ConfigData\x12C\n" +
	"\x06Import\x12\x1b.pomerium.cli.ImportRequest\x1a\x1c.pomerium.cli.ImportResponse\x12R\n" +
	"\vFetchRoutes\x12 .pomerium.cli.FetchRoutesRequest\x1a!.pomerium.cli.FetchRoutesResponse2\x87\x02\n" +
	"\bListener\x12S\n" +
	"\x06Update\x12#.pomerium.cli.ListenerUpdateRequest\x1a$.pomerium.cli.ListenerStatusResponse\x12I\n" +
	"\tGetStatus\x12\x16.pomerium.cli.Selector\x1a$.pomerium.cli.ListenerStatusResponse\x12[\n" +
	"\rStatusUpdates\x12\".pomerium.cli.StatusUpdatesRequest\x1a$.pomerium.cli.ConnectionStatusUpdate0\x01B\x1fZ\x1dgithub.com/pomerium/cli/protob\x06proto3"

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData []byte
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_api_proto_rawDesc), len(file_proto_api_proto_rawDesc)))
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_api_proto_goTypes = []any{
	(Protocol)(0),                                // 0: pomerium.cli.Protocol
	(ExportRequest_Format)(0),                    // 1: pomerium.cli.ExportRequest.Format
	(ConnectionStatusUpdate_ConnectionStatus)(0), // 2: pomerium.cli.ConnectionStatusUpdate.ConnectionStatus
	(*Record)(nil),                               // 3: pomerium.cli.Record
	(*Records)(nil),                              // 4: pomerium.cli.Records
	(*Selector)(nil),                             // 5: pomerium.cli.Selector
	(*DeleteRecordsResponse)(nil),                // 6: pomerium.cli.DeleteRecordsResponse
	(*ExportRequest)(nil),                        // 7: pomerium.cli.ExportRequest
	(*GetTagsRequest)(nil),                       // 8: pomerium.cli.GetTagsRequest
	(*GetTagsResponse)(nil),                      // 9: pomerium.cli.GetTagsResponse
	(*ConfigData)(nil),                           // 10: pomerium.cli.ConfigData
	(*ImportRequest)(nil),                        // 11: pomerium.cli.ImportRequest
	(*ImportResponse)(nil),                       // 12: pomerium.cli.ImportResponse
	(*ListenerUpdateRequest)(nil),                // 13: pomerium.cli.ListenerUpdateRequest
	(*ListenerStatus)(nil),                       // 14: pomerium.cli.ListenerStatus
	(*ListenerStatusResponse)(nil),               // 15: pomerium.cli.ListenerStatusResponse
	(*StatusUpdatesRequest)(nil),                 // 16: pomerium.cli.StatusUpdatesRequest
	(*FetchRoutesRequest)(nil),                   // 17: pomerium.cli.FetchRoutesRequest
	(*FetchRoutesResponse)(nil),                  // 18: pomerium.cli.FetchRoutesResponse
	(*PortalRoute)(nil),                          // 19: pomerium.cli.PortalRoute
	(*ConnectionStatusUpdate)(nil),               // 20: pomerium.cli.ConnectionStatusUpdate
	(*KeyUsage)(nil),                             // 21: pomerium.cli.KeyUsage
	(*Name)(nil),                                 // 22: pomerium.cli.Name
	(*CertificateInfo)(nil),                      // 23: pomerium.cli.CertificateInfo
	(*Certificate)(nil),                          // 24: pomerium.cli.Certificate
	(*ClientCertFromStore)(nil),                  // 25: pomerium.cli.ClientCertFromStore
	(*Connection)(nil),                           // 26: pomerium.cli.Connection
	nil,                                          // 27: pomerium.cli.ListenerStatusResponse.ListenersEntry
	(*timestamppb.Timestamp)(nil),                // 28: google.protobuf.Timestamp
}
var file_proto_api_proto_depIdxs = []int32{
	26, // 0: pomerium.cli.Record.conn:type_name -> pomerium.cli.Connection
	3,  // 1: pomerium.cli.Records.records:type_name -> pomerium.cli.Record
	5,  // 2: pomerium.cli.ExportRequest.selector:type_name -> pomerium.cli.Selector
	1,  // 3: pomerium.cli.ExportRequest.format:type_name -> pomerium.cli.ExportRequest.Format
	27, // 4: pomerium.cli.ListenerStatusResponse.listeners:type_name -> pomerium.cli.ListenerStatusResponse.ListenersEntry
	24, // 5: pomerium.cli.FetchRoutesRequest.client_cert:type_name -> pomerium.cli.Certificate
	25, // 6: pomerium.cli.FetchRoutesRequest.client_cert_from_store:type_name -> pomerium.cli.ClientCertFromStore
	19, // 7: pomerium.cli.FetchRoutesResponse.routes:type_name -> pomerium.cli.PortalRoute
	2,  // 8: pomerium.cli.ConnectionStatusUpdate.status:type_name -> pomerium.cli.ConnectionStatusUpdate.ConnectionStatus
	28, // 9: pomerium.cli.ConnectionStatusUpdate.ts:type_name -> google.protobuf.Timestamp
	22, // 10: pomerium.cli.CertificateInfo.issuer:type_name -> pomerium.cli.Name
	22, // 11: pomerium.cli.CertificateInfo.subject:type_name -> pomerium.cli.Name
	28, // 12: pomerium.cli.CertificateInfo.not_before:type_name -> google.protobuf.Timestamp
	28, // 13: pomerium.cli.CertificateInfo.not_after:type_name -> google.protobuf.Timestamp
	21, // 14: pomerium.cli.CertificateInfo.key_usage:type_name -> pomerium.cli.KeyUsage
	23, // 15: pomerium.cli.Certificate.info:type_name -> pomerium.cli.CertificateInfo
	0,  // 16: pomerium.cli.Connection.protocol:type_name -> pomerium.cli.Protocol
	24, // 17: pomerium.cli.Connection.client_cert:type_name -> pomerium.cli.Certificate
	25, // 18: pomerium.cli.Connection.client_cert_from_store:type_name -> pomerium.cli.ClientCertFromStore
	14, // 19: pomerium.cli.ListenerStatusResponse.ListenersEntry.value:type_name -> pomerium.cli.ListenerStatus
	5,  // 20: pomerium.cli.Config.List:input_type -> pomerium.cli.Selector
	5,  // 21: pomerium.cli.Config.Delete:input_type -> pomerium.cli.Selector
	3,  // 22: pomerium.cli.Config.Upsert:input_type -> pomerium.cli.Record
	8,  // 23: pomerium.cli.Config.GetTags:input_type -> pomerium.cli.GetTagsRequest
	7,  // 24: pomerium.cli.Config.Export:input_type -> pomerium.cli.ExportRequest
	11, // 25: pomerium.cli.Config.Import:input_type -> pomerium.cli.ImportRequest
	17, // 26: pomerium.cli.Config.FetchRoutes:input_type -> pomerium.cli.FetchRoutesRequest
	13, // 27: pomerium.cli.Listener.Update:input_type -> pomerium.cli.ListenerUpdateRequest
	5,  // 28: pomerium.cli.Listener.GetStatus:input_type -> pomerium.cli.Selector
	16, // 29: pomerium.cli.Listener.StatusUpdates:input_type -> pomerium.cli.StatusUpdatesRequest
	4,  // 30: pomerium.cli.Config.List:output_type -> pomerium.cli.Records
	6,  // 31: pomerium.cli.Config.Delete:output_type -> pomerium.cli.DeleteRecordsResponse
	3,  // 32: pomerium.cli.Config.Upsert:output_type -> pomerium.cli.Record
	9,  // 33: pomerium.cli.Config.GetTags:output_type -> pomerium.cli.GetTagsResponse
	10, // 34: pomerium.cli.Config.Export:output_type -> pomerium.cli.ConfigData
	12, // 35: pomerium.cli.Config.Import:output_type -> pomerium.cli.ImportResponse
	18, // 36: pomerium.cli.Config.FetchRoutes:output_type -> pomerium.cli.FetchRoutesResponse
	15, // 37: pomerium.cli.Listener.Update:output_type -> pomerium.cli.ListenerStatusResponse
	15, // 38: pomerium.cli.Listener.GetStatus:output_type -> pomerium.cli.ListenerStatusResponse
	20, // 39: pomerium.cli.Listener.StatusUpdates:output_type -> pomerium.cli.ConnectionStatusUpdate
	30, // [30:40] is the sub-list for method output_type
	20, // [20:30] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	file_proto_api_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_api_proto_msgTypes[8].OneofWrappers = []any{}
	file_proto_api_proto_msgTypes[11].OneofWrappers = []any{}
	file_proto_api_proto_msgTypes[14].OneofWrappers = []any{
		(*FetchRoutesRequest_DisableTlsVerification)(nil),
		(*FetchRoutesRequest_CaCert)(nil),
	}
	file_proto_api_proto_msgTypes[16].OneofWrappers = []any{}
	file_proto_api_proto_msgTypes[17].OneofWrappers = []any{}
	file_proto_api_proto_msgTypes[20].OneofWrappers = []any{}
	file_proto_api_proto_msgTypes[21].OneofWrappers = []any{}
	file_proto_api_proto_msgTypes[22].OneofWrappers = []any{}
	file_proto_api_proto_msgTypes[23].OneofWrappers = []any{
		(*Connection_DisableTlsVerification)(nil),
		(*Connection_CaCert)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_api_proto_rawDesc), len(file_proto_api_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		EnumInfos:         file_proto_api_proto_enumTypes,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}
